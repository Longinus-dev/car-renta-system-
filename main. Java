import java.util.*;

// ===== Car =====
class Car {
    private String licensePlate;
    private String model;
    private boolean isAvailable;

    public Car(String licensePlate, String model) {
        this.licensePlate = licensePlate;
        this.model = model;
        this.isAvailable = true;
    }

    public String getLicensePlate() { return licensePlate; }
    public String getModel() { return model; }
    public boolean isAvailable() { return isAvailable; }

    public void rent() { isAvailable = false; }
    public void returnCar() { isAvailable = true; }

    public String toString() {
        return model + " [" + licensePlate + "] - " + (isAvailable ? "Available" : "Rented");
    }
}

// ===== Customer =====
class Customer {
    private String name;
    private String driverLicenseNumber;

    public Customer(String name, String driverLicenseNumber) {
        this.name = name;
        this.driverLicenseNumber = driverLicenseNumber;
    }

    public String getName() { return name; }

    public String toString() {
        return name + " (DL: " + driverLicenseNumber + ")";
    }
}

// ===== RentalAgency =====
class RentalAgency {
    private List<Car> cars = new ArrayList<>();

    public void addCar(Car car) {
        cars.add(car);
    }

    public void displayAvailableCars() {
        System.out.println("\n--- Available Cars ---");
        for (Car car : cars) {
            if (car.isAvailable()) {
                System.out.println(car);
            }
        }
    }

    public boolean rentCar(String licensePlate, Customer customer) {
        for (Car car : cars) {
            if (car.getLicensePlate().equalsIgnoreCase(licensePlate) && car.isAvailable()) {
                car.rent();
                System.out.println(customer.getName() + " rented " + car.getModel());
                return true;
            }
        }
        System.out.println("Car not available.");
        return false;
    }

    public boolean returnCar(String licensePlate) {
        for (Car car : cars) {
            if (car.getLicensePlate().equalsIgnoreCase(licensePlate) && !car.isAvailable()) {
                car.returnCar();
                System.out.println("Car " + licensePlate + " returned.");
                return true;
            }
        }
        System.out.println("Car not found or not rented.");
        return false;
    }
}

// ===== LoginSystem (Simplified) =====
class LoginSystem {
    private static final String USERNAME = "admin";
    private static final String PASSWORD = "1234";

    public static boolean login() {
        Scanner scanner = new Scanner(System.in);
        int attempts = 3;

        while (attempts > 0) {
            System.out.print("Enter Username: ");
            String username = scanner.nextLine();

            System.out.print("Enter Password: ");
            String password = scanner.nextLine();

            if (username.equals(USERNAME) && password.equals(PASSWORD)) {
                System.out.println("Login successful.\n");
                return true;
            } else {
                attempts--;
                System.out.println("Incorrect credentials. Attempts left: " + attempts);
            }
        }

        System.out.println("Access denied.");
        return false;
    }
}

// ===== Main =====
public class Main {
    public static void main(String[] args) {
        if (!LoginSystem.login()) return;

        RentalAgency agency = new RentalAgency();
        agency.addCar(new Car("KDA123A", "Toyota Corolla"));
        agency.addCar(new Car("KBX456B", "Honda Fit"));
        agency.addCar(new Car("KCZ789C", "Mazda Axela"));

        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n1. View Available Cars");
            System.out.println("2. Rent a Car");
            System.out.println("3. Return a Car");
            System.out.println("0. Exit");
            System.out.print("Choice: ");
            choice = scanner.nextInt();
            scanner.nextLine();  // clear buffer

            switch (choice) {
                case 1:
                    agency.displayAvailableCars();
                    break;
                case 2:
                    System.out.print("Enter your name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter your Driver License: ");
                    String dl = scanner.nextLine();
                    System.out.print("Enter License Plate to Rent: ");
                    String plate = scanner.nextLine();
                    agency.rentCar(plate, new Customer(name, dl));
                    break;
                case 3:
                    System.out.print("Enter License Plate to Return: ");
                    String returnPlate = scanner.nextLine();
                    agency.returnCar(returnPlate);
                    break;
                case 0:
                    System.out.println("Exiting system...");
                    break;
                default:
                    System.out.println("Invalid input. Try again.");
            }
        } while (choice != 0);
    }
}
